using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DSTALGO_LabActivity10_Almirol
{
    public class CircularQueue<T>
    {
        private T[] array;
        private int count, front, rear;

        public CircularQueue() 
        {
            array = new T[6];
            count = 0; front = 0; rear = -1;
        }

        public int Count 
        { 
            get { return count; } 
        }

        public void Enqueue(T item) 
        {
            if (count < array.GetLength(0))
            {
                rear = (rear + 1) % array.GetLength(0);
                array[rear] = item;
                count += 1;
            }
            else 
            {
                throw new Exception("Queue is Full.");
            }
        }

        public T Dequeue() 
        {
            if (count > 0) 
            {
                T item = array[front];
                front = (front + 1) % array.GetLength(0);
                count -= 1;
                return item;
            }
            else 
            {
                throw new Exception("Queue is Empty.");
            }
        }

        public T Peek(int index) 
        {
            if (index >= 0 && index < count)
            {
                return array[(front + index) % array.GetLength(0)];
            }
            else
            {
                throw new Exception("Item is out of queue range.");
            }
        }

        public void PrintQueue()
        {
            int counter = count;
            int index = front;

            while (counter > 0) 
            {
                Console.WriteLine($"{array[index]}");
                index = (index + 1) % array.GetLength(0);
                counter -= 1;
            }
        }
    }
}
